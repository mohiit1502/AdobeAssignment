{"version":3,"sources":["pages/Login/selectors.js","components/atoms/InputField/InputField.js","components/atoms/InputField/index.js","components/atoms/SelectOption/index.js","components/atoms/SelectOption/SelectOption.js","components/molecules/common/FormFieldContainer/FormFieldContainer.js","components/molecules/common/FormFieldContainer/index.js","components/molecules/common/Form/Form.js","components/molecules/common/Form/index.js","components/molecules/LoginForm/LoginForm.js","components/molecules/LoginForm/index.js","components/molecules/SocialLogin/SocialLogin.jsx","components/molecules/SocialLogin/index.js","components/molecules/common/Jumbotron/Jumbotron.jsx","components/molecules/common/Jumbotron/index.js","pages/Login/Login.jsx","pages/Login/index.js","pages/Login/Login.module.scss"],"names":["getLogin","createSelector","data","dataState","pages","login","getFormValues","createGetSelector","getFormErrors","InputField","meta","className","container_class","aria-required","aria_required","htmlFor","id","validation","required","isRequired","isStandAloneField","label","secondaryLabel","error","errorMessage","type","name","data-firstname","value","fieldValues","undefined","stateValue","propsValue","minLength","rules","minlength","maxLength","maxlength","placeholder","aria-invalid","aria_invalid","onBlur","e","handlers","onBlurHandler","customBlurHandler","onFocus","onFocusHandler","onChange","onChangeHandler","style","width","defaultProps","propTypes","PropTypes","object","SelectOption","props","styles","root","FormFieldContainer","componentKey","propsData","passedValue","state","updateFormValues","formValues","updateFormErrors","formErrors","bind","validationObj","this","inputValue","target","validRegex","dataRuleRegex","RegExp","regex","test","poValidRegex","po_regex","tagName","selectedIndex","preSelected","error_message","trim","po_error_message","setState","event","oldValue","customBlurFormatter","validateFormField","elementType","React","Component","string","func","selectedCreditCard","Form","greeting","handleChange","handleSubmit","preventDefault","console","log","context","metaData","inputList","Object","keys","inputListSection","map","item","index","formFieldObject","key","filter","onSubmit","marginTop","background","LoginForm","loginFormFields","SocialLogin","height","onSuccess","onFailure","gapi","signin2","render","googleUser","getBasicProfile","getName","history","push","data-width","data-height","data-size","data-button-type","data-auto-logout-link","data-use-continue-as","withRouter","Jumbotron","jumboText","subText","jumboDescription","to","role","marginLeft","furtherLink","Login","pageType","initializeLogin","onClick","clicked","loginContainer","loginSplitter","mapStateToProps","createPropsSelector","mapDispatchToProps","actions","connect","module","exports"],"mappings":"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","file":"static/js/8.dca2f6f6.chunk.js","sourcesContent":["import {createSelector} from 'reselect'\r\nimport {createGetSelector} from 'reselect-immutable-helpers'\r\n\r\nconst getData = ({data}) => data\r\n\r\nexport const getLogin = createSelector(\r\n    getData,\r\n    (dataState) => {\r\n        return dataState.pages.login\r\n    }\r\n)\r\n\r\nexport const getFormValues = createGetSelector(getLogin, 'formValues')\r\nexport const getFormErrors = createGetSelector(getLogin, 'formErrors')","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputField = ({meta}) => {\r\n  return (\r\n    <div className='c-InputField'>\r\n      <div\r\n            className={`form-group row ${\r\n                meta.container_class ? meta.container_class : ''\r\n            }`}\r\n            aria-required={meta.aria_required}\r\n        >\r\n            <label htmlFor={meta.id} className=\"col-12 col-sm-3 col-lg-12 col-form-label\">\r\n                {meta.validation.required.isRequired && !meta.isStandAloneField && (\r\n                    <span className=\"required-indicator\">* </span>\r\n                )}\r\n                {meta.label}\r\n            </label>\r\n            {meta.secondaryLabel ? (\r\n                <span className=\"field--label-description\">{meta.secondaryLabel}</span>\r\n            ) : null}\r\n            <div className=\"col-12 col-sm-9 col-12\">\r\n                {meta.error && (\r\n                    <span className=\"form-wrapper__field-error\">{meta.errorMessage}</span>\r\n                )}\r\n                <input\r\n                    className={`form-control ${meta.error ? 'error' : ''}`}\r\n                    type={meta.type}\r\n                    id={meta.id}\r\n                    name={meta.name}\r\n                    data-firstname=\"null\"\r\n                    value={\r\n                        meta.fieldValues && meta.fieldValues.stateValue !== undefined\r\n                            ? meta.fieldValues.stateValue\r\n                            : meta.fieldValues.propsValue\r\n                    }\r\n                    required={meta.validation.required.isRequired ? 'required' : ''}\r\n                    minLength={meta.validation.rules.minlength}\r\n                    maxLength={meta.validation.rules.maxlength}\r\n                    placeholder={meta.placeholder}\r\n                    aria-required={meta.aria_required}\r\n                    aria-invalid={meta.aria_invalid}\r\n                    // onFocus={onBlurProp ? onBlurProp : this.onFocusHandler}\r\n                    onBlur={(e) =>\r\n                        meta.handlers.onBlurHandler(\r\n                            meta.validation,\r\n                            meta.handlers.customBlurHandler,\r\n                            e\r\n                        )\r\n                    }\r\n                    onFocus={meta.handlers.onFocusHandler}\r\n                    onChange={meta.handlers.onChangeHandler}\r\n                    style={{width: '100%'}}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInputField.defaultProps = {\r\n\r\n};\r\n\r\nInputField.propTypes = {\r\n  meta: PropTypes.object\r\n};\r\n\r\nexport default InputField;","import InputField from './InputField';\r\n\r\nexport default InputField;","import SelectOption from './SelectOption';\r\n\r\nexport default SelectOption;","import React from 'react';\r\nimport styles from './SelectOption.component.scss';\r\n\r\nconst SelectOption = props => {\r\n  return (\r\n    <div className={styles.root}>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectOption;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport InputField from '../../../atoms/InputField'\r\nimport SelectOption from '../../../atoms/SelectOption'\r\n\r\n/**\r\n * INSERT_DESCRIPTION_HERE\r\n */\r\n\r\nclass FormFieldContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const componentKey = this.props.propsData && this.props.propsData.id\r\n        const passedValue = this.props.value || (this.props.propsData && this.props.propsData.value)\r\n        this.state = {\r\n            error: false,\r\n            errorMessage: null\r\n        }\r\n        this.props.updateFormValues({\r\n            formValues: {\r\n                // ...this.props.formValues,\r\n                [componentKey]: passedValue ? passedValue : ''\r\n            }\r\n        })\r\n        this.props.updateFormErrors({\r\n            formErrors: {\r\n                // ...this.props.formErrors,\r\n                [componentKey]: ''\r\n            }\r\n        })\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n        this.onBlurHandler = this.onBlurHandler.bind(this)\r\n        this.onFocusHandler = this.onFocusHandler.bind(this)\r\n    }\r\n\r\n    /**\r\n     * validateFormField - validates the input field values\r\n     * @param  {object} event js event object\r\n     * @param  {object} validationObj fieldinput data as props\r\n     */\r\n    validateFormField(e, validationObj) {\r\n        const {propsData, formErrors, formValues, updateFormErrors, updateFormValues} = this.props\r\n        const inputValue = e.target.value && e.target.value\r\n        let error = false\r\n        let errorMessage = ''\r\n        const componentKey = propsData.id\r\n        const validRegex =\r\n            validationObj.dataRuleRegex &&\r\n            new RegExp(validationObj.dataRuleRegex.regex).test(inputValue)\r\n        const poValidRegex =\r\n            e.target.id === 'address1' &&\r\n            validationObj.dataRuleRegex.po_regex &&\r\n            new RegExp(validationObj.dataRuleRegex.po_regex, 'i').test(inputValue)\r\n\r\n        if (e.target.tagName && e.target.tagName === 'SELECT') {\r\n            if (\r\n                validationObj.required.isRequired &&\r\n                e.target.selectedIndex === 0 &&\r\n                !validationObj.required.preSelected\r\n            ) {\r\n                error = true\r\n                errorMessage = validationObj.required.error_message\r\n            }\r\n        } else if (e.target.tagName && e.target.tagName === 'INPUT') {\r\n            if (validationObj.required.isRequired) {\r\n                if (inputValue.trim('') === '') {\r\n                    error = true\r\n                    errorMessage = validationObj.required.error_message\r\n                } else if (validationObj.dataRuleRegex && !validRegex) {\r\n                    error = true\r\n                    errorMessage = validationObj.dataRuleRegex.error_message\r\n                } else if (validationObj.dataRuleRegex && poValidRegex) {\r\n                    error = true\r\n                    errorMessage = validationObj.dataRuleRegex.po_error_message\r\n                }\r\n            }\r\n        } else {\r\n            error = false\r\n            errorMessage = null\r\n        }\r\n\r\n        this.setState({\r\n            error\r\n        })\r\n\r\n        updateFormErrors({\r\n            formErrors: {\r\n                ...formErrors,\r\n                [componentKey]: errorMessage\r\n            }\r\n        })\r\n\r\n        updateFormValues({\r\n            formValues: {\r\n                ...formValues,\r\n                [componentKey]: inputValue\r\n            }\r\n        })\r\n\r\n        return error\r\n    }\r\n\r\n    onChangeHandler(event) {\r\n        const value = event.target.value\r\n        this.setState({\r\n            value\r\n        })\r\n    }\r\n\r\n    onFocusHandler(event) {\r\n        this.setState({\r\n            oldValue: event.target.value\r\n        })\r\n    }\r\n\r\n    onBlurHandler(validation, customBlurHandler, e) {\r\n        e.oldValue = this.state.oldValue\r\n        const {customBlurFormatter} = this.props\r\n        const isError = this.validateFormField(e, validation)\r\n        if (!isError) {\r\n            if (customBlurHandler && typeof customBlurHandler === 'function') {\r\n                customBlurHandler(e)\r\n            }\r\n            if (customBlurFormatter && typeof customBlurFormatter === 'function') {\r\n                this.setState({value: customBlurFormatter(e)})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {customBlurHandler, formErrors, propsData} = this.props\r\n        const {elementType} = propsData\r\n        const errorMessage = formErrors && formErrors[propsData.id]\r\n        const meta = {\r\n            ...this.props.propsData,\r\n            className: this.state.error ? 'error' : '',\r\n            error: this.state.error || errorMessage,\r\n            errorMessage,\r\n            handlers: {\r\n                onBlurHandler: this.onBlurHandler,\r\n                customBlurHandler,\r\n                onChangeHandler: this.onChangeHandler,\r\n                onFocusHandler: this.onFocusHandler\r\n            },\r\n            fieldValues: {\r\n                propsValue: this.props.value,\r\n                stateValue: this.state.value\r\n            }\r\n        }\r\n\r\n        /**\r\n         * switch function - returns HTML Tag depending upon the requirement\r\n         * @param  {string} elementType - element type e.g. input,select\r\n         */\r\n        switch (elementType) {\r\n            case 'input':\r\n                return <InputField meta={meta} />\r\n            case 'select':\r\n                return <SelectOption meta={meta} />\r\n            default:\r\n                return <input />\r\n        }\r\n    }\r\n}\r\n\r\nFormFieldContainer.propTypes = {\r\n    propsData: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    customBlurHandler: PropTypes.func,\r\n    customBlurFormatter: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    value: PropTypes.string,\r\n    formValues: PropTypes.object,\r\n    formErrors: PropTypes.object,\r\n    selectedCreditCard: PropTypes.object,\r\n    updateFormValues: PropTypes.func,\r\n    updateFormErrors: PropTypes.func\r\n}\r\n\r\nexport default FormFieldContainer\r\n","import FormFieldContainer from './FormFieldContainer';\r\n\r\nexport default FormFieldContainer;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport FormFieldContainer from '../FormFieldContainer';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            greeting: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onFocusHandler = this.onFocusHandler.bind(this)\r\n    }     \r\n    \r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        // fetch(`/api/greeting?name=${encodeURIComponent(this.state.name)}`)\r\n        //     .then(response => response.json())\r\n        //     .then(state => this.setState(state));\r\n\r\n    }\r\n\r\n    onFocusHandler() {\r\n        console.log('Parent, on focus handler')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            context,\r\n            fieldValues,\r\n            formErrors,\r\n            formValues,\r\n            metaData,\r\n            updateFormErrors,\r\n            updateFormValues\r\n        } = this.props\r\n        // const jsonData = this.props && this.props.metaData\r\n        const inputList = metaData && context ? Object.keys(metaData[context]) : []\r\n\r\n        let inputListSection =\r\n            inputList &&\r\n            inputList.map((item, index) => {\r\n                const formFieldObject = metaData[context][item]\r\n                const formField = formFieldObject ? (\r\n                    <FormFieldContainer\r\n                        propsData={formFieldObject}\r\n                        key={index}\r\n                        onFocus={this.onFocusHandler}\r\n                        value={fieldValues && fieldValues[item]}\r\n                        formErrors={formErrors}\r\n                        formValues={formValues}\r\n                        updateFormErrors={updateFormErrors}\r\n                        updateFormValues={updateFormValues}\r\n                    />\r\n                ) : null\r\n                return formField\r\n            })\r\n\r\n        inputListSection = inputListSection.filter((formFieldObject) => {\r\n            return formFieldObject !== null\r\n        })\r\n\r\n        return (\r\n            <form className='c-Form' onSubmit={this.handleSubmit}>\r\n                <fieldset>{inputListSection}</fieldset>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{marginTop: '15px', background: 'black'}}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    context: PropTypes.string,\r\n    customBlurHandler: PropTypes.func,\r\n    customBlurFormatter: PropTypes.func,\r\n    metaData: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    fieldValues: PropTypes.object,\r\n    formErrors: PropTypes.object,\r\n    formValues: PropTypes.object,\r\n    updateFormErrors: PropTypes.func,\r\n    updateFormValues: PropTypes.func\r\n}\r\n\r\nexport default Form","import Form from './Form';\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport loginFormFields from './../../../config/forms-meta/login-form.json'\r\nimport Form from './../common/Form'\r\n\r\nconst LoginForm = props => {\r\n  return (\r\n    <div className='c-LoginForm'>\r\n      <Form \r\n        metaData={loginFormFields} \r\n        context=\"login\"\r\n        updateFormValues={props.updateFormValues}\r\n        updateFormErrors={props.updateFormErrors}\r\n        formErrors={props.formErrors}\r\n        formValues={props.formValues}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  updateFormValues: PropTypes.func,\r\n  updateFormErrors: PropTypes.func,\r\n  formValues: PropTypes.object,\r\n  formErrors: PropTypes.object\r\n};\r\n\r\nexport default LoginForm;","import LoginForm from './LoginForm';\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {gapi} from 'gapi-script'\r\n\r\nclass SocialLogin extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.width = 254\r\n    this.height = 50\r\n    this.onSuccess = this.onSuccess.bind(this)\r\n    this.onFailure = this.onFailure.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    gapi && gapi.signin2 && gapi.signin2.render('g-signin2', {\r\n      'scope': 'profile email',\r\n      'width': this.width,\r\n      'height': this.height,\r\n      'longtitle': true,\r\n      'theme': 'dark',\r\n      'onsuccess': this.onSuccess,\r\n      'onfailure': this.onFailure\r\n    });  \r\n  }\r\n\r\n  onSuccess(googleUser) {\r\n    console.log('Logged in as: ' + googleUser.getBasicProfile().getName());\r\n    this.props.history.push('/view/plp')\r\n  }\r\n\r\n  onFailure(error) {\r\n    console.log(error);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='c-SocialLogin'>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"g-signin2\" id=\"g-signin2\"></div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div \r\n              className=\"fb-login-button\"\r\n              data-width={this.width}\r\n              data-height={this.height}\r\n              data-size=\"large\"\r\n              data-button-type=\"continue_with\"\r\n              data-auto-logout-link=\"false\"\r\n              data-use-continue-as=\"true\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSocialLogin.defaultProps = {\r\n\r\n};\r\n\r\nSocialLogin.propTypes = {\r\n\r\n};\r\n\r\nexport default withRouter(SocialLogin)","import SocialLogin from './SocialLogin.jsx';\r\n\r\nexport default SocialLogin;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Jumbotron = props => {\r\n  return (\r\n    <div className='c-Jumbotron'>\r\n      <h1 className=\"display-4\">{props.jumboText}</h1>\r\n      <p className=\"lead\">{props.subText}</p>\r\n      <hr className='my-4' />\r\n      <p>{props.jumboDescription}</p>\r\n      <p className=\"lead\">\r\n        <Link className=\"btn btn-primary btn-lg\" to=\"/view/plp\" role=\"button\">Go To PLP</Link>\r\n        <Link className=\"btn btn-primary btn-lg float-right\" to=\"#\" role=\"button\" style={{marginLeft: '15px'}}>{props.furtherLink}</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nJumbotron.propTypes = {\r\n  furtherLink: PropTypes.string,\r\n  jumboDescription: PropTypes.string,\r\n  jumboText: PropTypes.string,\r\n  subText: PropTypes.string\r\n};\r\n\r\nexport default Jumbotron;","import Jumbotron from './Jumbotron.jsx';\r\n\r\nexport default Jumbotron;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Login.module.scss'\r\nimport {connect} from 'react-redux'\r\nimport {createPropsSelector} from 'reselect-immutable-helpers'\r\n\r\nimport * as actions from './actions'\r\nimport {getLogin, getFormErrors, getFormValues} from './selectors'\r\nimport LoginForm from '../../components/molecules/LoginForm'\r\nimport SocialLogin from '../../components/molecules/SocialLogin'\r\nimport Jumbotron from '../../components/molecules/common/Jumbotron'\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.pageType = 'login'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {initializeLogin} = this.props\r\n        initializeLogin()\r\n    }\r\n\r\n    clicked() {\r\n        console.log('login handler')\r\n    }\r\n\r\n    render() {\r\n      const {updateFormErrors, updateFormValues, formErrors, formValues} = this.props\r\n      return (\r\n          <div className={`${styles.Login} container`} onClick={this.clicked}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <Jumbotron\r\n                            jumboText=\"Adobe - Joules to Watts assignment\"\r\n                            subText=\"PLP and Cart Page Demo\"\r\n                            jumboDescription=\"This app is build using React JS and routing is added using custom solutions to work on GH Pages. Login is optional and can be skipped.\"\r\n                            furtherLink=\"Learn more\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className={styles.loginContainer}>\r\n                        <p className={styles['c-login-intimation']}>Let's get to know each other, shall we!</p>\r\n                            <LoginForm\r\n                                updateFormValues={updateFormValues}\r\n                                updateFormErrors={updateFormErrors}\r\n                                formErrors={formErrors}\r\n                                formValues={formValues}\r\n                            />\r\n                            <p className={styles.loginSplitter}>OR</p>\r\n                            <SocialLogin />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    initializeLogin: PropTypes.func,\r\n    dataState: PropTypes.object,\r\n    updateFormValues: PropTypes.func,\r\n    updateFormErrors: PropTypes.func,\r\n    formValues: PropTypes.object,\r\n    formErrors: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = createPropsSelector({\r\n    dataState: getLogin,\r\n    formErrors: getFormErrors,\r\n    formValues: getFormValues\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    initializeLogin: actions.initializeLogin,\r\n    updateFormErrors: actions.updateFormErrors,\r\n    updateFormValues: actions.updateFormValues\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login)\r\n","import Login from './Login.jsx';\r\n\r\nexport default Login;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__cwMRP\",\"loginContainer\":\"Login_loginContainer__1swiZ\",\"c-login-intimation\":\"Login_c-login-intimation__15Wjd\",\"loginSplitter\":\"Login_loginSplitter__XlzBf\"};"],"sourceRoot":""}