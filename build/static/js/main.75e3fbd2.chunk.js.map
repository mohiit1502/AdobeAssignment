{"version":3,"sources":["pages/PLP/actions.js","pages/Cart/actions.js","pages/Login/actions.js","components/molecules/PageLoader/PageLoader.jsx","components/molecules/PageLoader/index.js","router.jsx","pages/Login/reducer.js","pages/PLP/reducer.js","pages/Cart/reducer.js","reducer.js","main.js"],"names":["DISPATCH_PRODUCTS","DISPATCH_SORT_SELECTION","DISPATCH_FILTER_RANGE","DISPATCH_SEARCH_STRING","UPDATE_FORM_VALUES","UPDATE_FORM_ERRORS","dispatchProducts","products","type","payload","dispatchSortSelection","sortSelection","sortBy","dispatchFilterRange","filterRange","dispatchSearchString","searchString","UPDATE_CART","updateCart","cartTotalCount","cartItems","LOGIN_DATA_STATE_RECEIVED","initializeLogin","dispatch","updateFormValues","formValues","updateFormErrors","formErrors","PageLoader","props","className","defaultProps","propTypes","LoadableLogin","Loadable","loader","loading","LoadablePLP","LoadableCart","Router","store","this","basename","exact","path","component","React","Component","PropTypes","object","initialState","Immutable","Map","reducer","state","action","mergeDeep","set","combineReducers","data","pages","login","loginReducer","plp","plpReducer","cart","cartReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","immutable","compose","createStore","applyMiddleware","thunk","ReactModal","setAppElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75e3fbd2.chunk.js","sourcesContent":["export const DISPATCH_PRODUCTS = 'DISPATCH_PRODUCTS'\r\nexport const DISPATCH_SORT_SELECTION = 'DISPATCH_SORT_SELECTION'\r\nexport const DISPATCH_FILTER_RANGE = 'DISPATCH_FILTER_RANGE'\r\nexport const DISPATCH_SEARCH_STRING = 'DISPATCH_SEARCH_STRING'\r\nexport const UPDATE_FORM_VALUES = 'UPDATE_BILLING_FORM_VALUES'\r\nexport const UPDATE_FORM_ERRORS = 'UPDATE_BILLING_FORM_ERRORS'\r\n\r\nexport const initializeLogin = () => (dispatch) => {\r\n    // return Promise.all([\r\n    //     dispatch(initializeApp())\r\n    // ])\r\n    // .then(() => ({statusCode: 200}))\r\n    // .catch((err) => ({statusCode: err.statusCode || 500}))\r\n}\r\n\r\nexport const dispatchProducts = (products) => {\r\n    return {\r\n        type: DISPATCH_PRODUCTS,\r\n        payload: {products}\r\n    }\r\n}\r\n\r\nexport const dispatchSortSelection = (sortSelection) => {\r\n    return {\r\n        type: DISPATCH_SORT_SELECTION,\r\n        payload: {sortBy: sortSelection}\r\n    }\r\n}\r\n\r\nexport const dispatchFilterRange = (filterRange) => {\r\n    return {\r\n        type: DISPATCH_FILTER_RANGE,\r\n        payload: {filterRange}\r\n    }\r\n}\r\n\r\nexport const dispatchSearchString = (searchString) => {\r\n    return {\r\n        type: DISPATCH_SEARCH_STRING,\r\n        payload: {searchString}\r\n    }\r\n}\r\n\r\nexport const updateFormValues = (formValues) => {\r\n    return {\r\n        type: UPDATE_FORM_VALUES,\r\n        payload: formValues\r\n    }\r\n}\r\n\r\nexport const updateFormErrors = (formErrors) => {\r\n    return {\r\n        type: UPDATE_FORM_ERRORS,\r\n        payload: formErrors\r\n    }\r\n}\r\n    ","export const UPDATE_CART = 'UPDATE_CART'\r\nexport const UPDATE_FORM_VALUES = 'UPDATE_BILLING_FORM_VALUES'\r\nexport const UPDATE_FORM_ERRORS = 'UPDATE_BILLING_FORM_ERRORS'\r\n\r\nexport const initializeLogin = () => (dispatch) => {\r\n    // return Promise.all([\r\n    //     dispatch(initializeApp())\r\n    // ])\r\n    // .then(() => ({statusCode: 200}))\r\n    // .catch((err) => ({statusCode: err.statusCode || 500}))\r\n}\r\n\r\nexport const updateCart = (cartTotalCount, cartItems) => {\r\n    return {\r\n        type: UPDATE_CART,\r\n        payload: {cartTotalCount, cartItems}\r\n    }\r\n}\r\n\r\nexport const updateFormValues = (formValues) => {\r\n    return {\r\n        type: UPDATE_FORM_VALUES,\r\n        payload: formValues\r\n    }\r\n}\r\n\r\nexport const updateFormErrors = (formErrors) => {\r\n    return {\r\n        type: UPDATE_FORM_ERRORS,\r\n        payload: formErrors\r\n    }\r\n}\r\n    ","export const LOGIN_DATA_STATE_RECEIVED = 'LOGIN_DATA_STATE_RECEIVED'\r\nexport const UPDATE_FORM_VALUES = 'UPDATE_BILLING_FORM_VALUES'\r\nexport const UPDATE_FORM_ERRORS = 'UPDATE_BILLING_FORM_ERRORS'\r\n\r\nexport const updateLoginDataState = (payload) => ({type: LOGIN_DATA_STATE_RECEIVED, payload})\r\n\r\nexport const initializeLogin = () => (dispatch) => {\r\n    // return Promise.all([\r\n    //     dispatch(initializeApp())\r\n    // ])\r\n    // .then(() => ({statusCode: 200}))\r\n    // .catch((err) => ({statusCode: err.statusCode || 500}))\r\n}\r\n\r\nexport const updateFormValues = (formValues) => {\r\n    return {\r\n        type: UPDATE_FORM_VALUES,\r\n        payload: formValues\r\n    }\r\n}\r\n\r\nexport const updateFormErrors = (formErrors) => {\r\n    return {\r\n        type: UPDATE_FORM_ERRORS,\r\n        payload: formErrors\r\n    }\r\n}\r\n    ","import React from 'react';\r\n\r\nconst PageLoader = props => {\r\n  return (\r\n    <div className='c-PageLoader'>\r\n      <div className=\"c-PageLoader__lds-ripple\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n      // <div className='c-PageLoader'>\r\n      //   <div className='is-animate'>\r\n      //     <div className='l'>l</div>\r\n      //     <div className='l'>o</div>\r\n      //     <div className='l'>a</div>\r\n      //     <div className='l'>d</div>\r\n      //     <div className='l'>i</div>\r\n      //     <div className='l'>n</div>\r\n      //     <div className='l'>g</div>\r\n      //   </div>\r\n      // </div>\r\n};\r\n\r\nPageLoader.defaultProps = {\r\n\r\n};\r\n\r\nPageLoader.propTypes = {\r\n\r\n};\r\n\r\nexport default PageLoader;","import PageLoader from './PageLoader.jsx';\r\n\r\nexport default PageLoader;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport PageLoader from './components/molecules/PageLoader'\r\nimport Loadable from 'react-loadable'\r\n\r\nexport const LoadableLogin = Loadable({\r\n    loader: () => import('./pages/Login'),\r\n    loading: PageLoader\r\n})\r\n\r\nexport const LoadablePLP = Loadable({\r\n    loader: () => import('./pages/PLP'),\r\n    loading: PageLoader\r\n})\r\n\r\nexport const LoadableCart = Loadable({\r\n    loader: () => import('./pages/Cart'),\r\n    loading: PageLoader\r\n})\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        const {store} = this.props\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter basename=\"/eComDemo\">\r\n                    <Route exact path=\"/\" component={LoadablePLP} />\r\n                    <Route path=\"/login\" component={LoadableLogin} />\r\n                    <Route path=\"/view/plp\" component={LoadablePLP} />\r\n                    <Route path=\"/view/cart\" component={LoadableCart} />\r\n                </BrowserRouter>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nRouter.propTypes = {\r\n    store: PropTypes.object\r\n}\r\n\r\nexport default Router\r\n","import Immutable from 'immutable'\r\n\r\nimport {LOGIN_DATA_STATE_RECEIVED, UPDATE_FORM_ERRORS, UPDATE_FORM_VALUES} from './actions'\r\n\r\nconst initialState = Immutable.Map()\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_DATA_STATE_RECEIVED:\r\n        case UPDATE_FORM_ERRORS:\r\n        case UPDATE_FORM_VALUES:\r\n            return state.mergeDeep(action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import Immutable from 'immutable'\r\n\r\nimport {\r\n    DISPATCH_PRODUCTS,\r\n    DISPATCH_SORT_SELECTION,\r\n    DISPATCH_FILTER_RANGE,\r\n    DISPATCH_SEARCH_STRING,\r\n    UPDATE_FORM_ERRORS,\r\n    UPDATE_FORM_VALUES\r\n} from './actions'\r\n\r\nconst initialState = Immutable.Map({\r\n    products: []\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DISPATCH_PRODUCTS:\r\n        case DISPATCH_SORT_SELECTION:\r\n        case DISPATCH_FILTER_RANGE:\r\n        case DISPATCH_SEARCH_STRING:\r\n        case UPDATE_FORM_ERRORS:\r\n        case UPDATE_FORM_VALUES:\r\n            return state.mergeDeep(action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import Immutable from 'immutable'\r\n\r\nimport {\r\n    UPDATE_CART,\r\n    UPDATE_FORM_ERRORS,\r\n    UPDATE_FORM_VALUES\r\n} from './actions'\r\n\r\nconst initialState = Immutable.Map({\r\n    cartItems: {}\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_CART:\r\n            return state\r\n                .set('cartItems', action.payload.cartItems)\r\n                .set('cartTotalCount', action.payload.cartTotalCount)\r\n        case UPDATE_FORM_ERRORS:\r\n        case UPDATE_FORM_VALUES:\r\n            return state.mergeDeep(action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import {combineReducers} from 'redux'\r\n\r\nimport loginReducer from './pages/Login/reducer'\r\nimport plpReducer from './pages/PLP/reducer'\r\nimport cartReducer from './pages/Cart/reducer'\r\n\r\nexport default combineReducers({\r\n    data: combineReducers({\r\n        pages: combineReducers({\r\n            login: loginReducer,\r\n            plp: plpReducer,\r\n            cart: cartReducer\r\n        })\r\n    })\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk'\r\nimport Immutable from 'immutable'\r\nimport {createStore, applyMiddleware, compose} from 'redux'\r\n// import * as serviceWorker from '../serviceWorker';\r\nimport Router from './router';\r\nimport reducer from './reducer'\r\nimport ReactModal from 'react-modal'\r\nimport './index.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        serialize: { // prettier-ignore\r\n            immutable: Immutable\r\n        }\r\n    }) : compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nReactModal.setAppElement('#root');\r\nReactDOM.render(<Router store={store} />, document.getElementById('root'));\r\n\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}