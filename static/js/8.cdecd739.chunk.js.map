{"version":3,"sources":["pages/Login/selectors.js","components/atoms/InputField/InputField.js","components/atoms/InputField/index.js","components/atoms/SelectOption/index.js","components/atoms/SelectOption/SelectOption.js","components/molecules/common/FormFieldContainer/FormFieldContainer.js","components/molecules/common/FormFieldContainer/index.js","components/molecules/common/Form/Form.js","components/molecules/common/Form/index.js","components/molecules/LoginForm/LoginForm.js","components/molecules/LoginForm/index.js","components/molecules/SocialLogin/SocialLogin.jsx","components/molecules/SocialLogin/index.js","components/molecules/common/Jumbotron/Jumbotron.jsx","components/molecules/common/Jumbotron/index.js","pages/Login/Login.jsx","pages/Login/index.js","pages/Login/Login.module.scss"],"names":["getLogin","createSelector","data","dataState","pages","login","getFormValues","createGetSelector","getFormErrors","InputField","meta","className","container_class","aria-required","aria_required","htmlFor","id","validation","required","isRequired","isStandAloneField","label","secondaryLabel","error","errorMessage","type","name","data-firstname","value","fieldValues","undefined","stateValue","propsValue","minLength","rules","minlength","maxLength","maxlength","placeholder","aria-invalid","aria_invalid","onBlur","e","handlers","onBlurHandler","customBlurHandler","onFocus","onFocusHandler","onChange","onChangeHandler","style","width","defaultProps","propTypes","PropTypes","object","SelectOption","props","styles","root","FormFieldContainer","componentKey","propsData","passedValue","state","updateFormValues","formValues","updateFormErrors","formErrors","bind","validationObj","this","inputValue","target","validRegex","dataRuleRegex","RegExp","regex","test","poValidRegex","po_regex","tagName","selectedIndex","preSelected","error_message","trim","po_error_message","setState","event","oldValue","customBlurFormatter","validateFormField","elementType","React","Component","string","func","selectedCreditCard","Form","greeting","handleChange","handleSubmit","preventDefault","console","log","context","metaData","inputList","Object","keys","inputListSection","map","item","index","formFieldObject","key","filter","onSubmit","marginTop","background","LoginForm","loginFormFields","SocialLogin","height","onSuccess","onFailure","gapi","signin2","render","googleUser","getBasicProfile","getName","history","push","data-width","data-height","data-size","data-button-type","data-auto-logout-link","data-use-continue-as","withRouter","Jumbotron","jumboText","subText","jumboDescription","to","role","marginLeft","furtherLink","Login","pageType","initializeLogin","onClick","clicked","loginContainer","loginSplitter","mapStateToProps","createPropsSelector","mapDispatchToProps","actions","connect","module","exports"],"mappings":"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","file":"static/js/8.cdecd739.chunk.js","sourcesContent":["import {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\n\nconst getData = ({data}) => data\n\nexport const getLogin = createSelector(\n    getData,\n    (dataState) => {\n        return dataState.pages.login\n    }\n)\n\nexport const getFormValues = createGetSelector(getLogin, 'formValues')\nexport const getFormErrors = createGetSelector(getLogin, 'formErrors')","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputField = ({meta}) => {\n  return (\n    <div className='c-InputField'>\n      <div\n            className={`form-group row ${\n                meta.container_class ? meta.container_class : ''\n            }`}\n            aria-required={meta.aria_required}\n        >\n            <label htmlFor={meta.id} className=\"col-12 col-sm-3 col-lg-12 col-form-label\">\n                {meta.validation.required.isRequired && !meta.isStandAloneField && (\n                    <span className=\"required-indicator\">* </span>\n                )}\n                {meta.label}\n            </label>\n            {meta.secondaryLabel ? (\n                <span className=\"field--label-description\">{meta.secondaryLabel}</span>\n            ) : null}\n            <div className=\"col-12 col-sm-9 col-12\">\n                {meta.error && (\n                    <span className=\"form-wrapper__field-error\">{meta.errorMessage}</span>\n                )}\n                <input\n                    className={`form-control ${meta.error ? 'error' : ''}`}\n                    type={meta.type}\n                    id={meta.id}\n                    name={meta.name}\n                    data-firstname=\"null\"\n                    value={\n                        meta.fieldValues && meta.fieldValues.stateValue !== undefined\n                            ? meta.fieldValues.stateValue\n                            : meta.fieldValues.propsValue\n                    }\n                    required={meta.validation.required.isRequired ? 'required' : ''}\n                    minLength={meta.validation.rules.minlength}\n                    maxLength={meta.validation.rules.maxlength}\n                    placeholder={meta.placeholder}\n                    aria-required={meta.aria_required}\n                    aria-invalid={meta.aria_invalid}\n                    // onFocus={onBlurProp ? onBlurProp : this.onFocusHandler}\n                    onBlur={(e) =>\n                        meta.handlers.onBlurHandler(\n                            meta.validation,\n                            meta.handlers.customBlurHandler,\n                            e\n                        )\n                    }\n                    onFocus={meta.handlers.onFocusHandler}\n                    onChange={meta.handlers.onChangeHandler}\n                    style={{width: '100%'}}\n                />\n            </div>\n        </div>\n    </div>\n  );\n};\n\nInputField.defaultProps = {\n\n};\n\nInputField.propTypes = {\n  meta: PropTypes.object\n};\n\nexport default InputField;","import InputField from './InputField';\n\nexport default InputField;","import SelectOption from './SelectOption';\n\nexport default SelectOption;","import React from 'react';\nimport styles from './SelectOption.component.scss';\n\nconst SelectOption = props => {\n  return (\n    <div className={styles.root}>\n    </div>\n  );\n};\n\nexport default SelectOption;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport InputField from '../../../atoms/InputField'\nimport SelectOption from '../../../atoms/SelectOption'\n\n/**\n * INSERT_DESCRIPTION_HERE\n */\n\nclass FormFieldContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        const componentKey = this.props.propsData && this.props.propsData.id\n        const passedValue = this.props.value || (this.props.propsData && this.props.propsData.value)\n        this.state = {\n            error: false,\n            errorMessage: null\n        }\n        this.props.updateFormValues({\n            formValues: {\n                // ...this.props.formValues,\n                [componentKey]: passedValue ? passedValue : ''\n            }\n        })\n        this.props.updateFormErrors({\n            formErrors: {\n                // ...this.props.formErrors,\n                [componentKey]: ''\n            }\n        })\n        this.onChangeHandler = this.onChangeHandler.bind(this)\n        this.onBlurHandler = this.onBlurHandler.bind(this)\n        this.onFocusHandler = this.onFocusHandler.bind(this)\n    }\n\n    /**\n     * validateFormField - validates the input field values\n     * @param  {object} event js event object\n     * @param  {object} validationObj fieldinput data as props\n     */\n    validateFormField(e, validationObj) {\n        const {propsData, formErrors, formValues, updateFormErrors, updateFormValues} = this.props\n        const inputValue = e.target.value && e.target.value\n        let error = false\n        let errorMessage = ''\n        const componentKey = propsData.id\n        const validRegex =\n            validationObj.dataRuleRegex &&\n            new RegExp(validationObj.dataRuleRegex.regex).test(inputValue)\n        const poValidRegex =\n            e.target.id === 'address1' &&\n            validationObj.dataRuleRegex.po_regex &&\n            new RegExp(validationObj.dataRuleRegex.po_regex, 'i').test(inputValue)\n\n        if (e.target.tagName && e.target.tagName === 'SELECT') {\n            if (\n                validationObj.required.isRequired &&\n                e.target.selectedIndex === 0 &&\n                !validationObj.required.preSelected\n            ) {\n                error = true\n                errorMessage = validationObj.required.error_message\n            }\n        } else if (e.target.tagName && e.target.tagName === 'INPUT') {\n            if (validationObj.required.isRequired) {\n                if (inputValue.trim('') === '') {\n                    error = true\n                    errorMessage = validationObj.required.error_message\n                } else if (validationObj.dataRuleRegex && !validRegex) {\n                    error = true\n                    errorMessage = validationObj.dataRuleRegex.error_message\n                } else if (validationObj.dataRuleRegex && poValidRegex) {\n                    error = true\n                    errorMessage = validationObj.dataRuleRegex.po_error_message\n                }\n            }\n        } else {\n            error = false\n            errorMessage = null\n        }\n\n        this.setState({\n            error\n        })\n\n        updateFormErrors({\n            formErrors: {\n                ...formErrors,\n                [componentKey]: errorMessage\n            }\n        })\n\n        updateFormValues({\n            formValues: {\n                ...formValues,\n                [componentKey]: inputValue\n            }\n        })\n\n        return error\n    }\n\n    onChangeHandler(event) {\n        const value = event.target.value\n        this.setState({\n            value\n        })\n    }\n\n    onFocusHandler(event) {\n        this.setState({\n            oldValue: event.target.value\n        })\n    }\n\n    onBlurHandler(validation, customBlurHandler, e) {\n        e.oldValue = this.state.oldValue\n        const {customBlurFormatter} = this.props\n        const isError = this.validateFormField(e, validation)\n        if (!isError) {\n            if (customBlurHandler && typeof customBlurHandler === 'function') {\n                customBlurHandler(e)\n            }\n            if (customBlurFormatter && typeof customBlurFormatter === 'function') {\n                this.setState({value: customBlurFormatter(e)})\n            }\n        }\n    }\n\n    render() {\n        const {customBlurHandler, formErrors, propsData} = this.props\n        const {elementType} = propsData\n        const errorMessage = formErrors && formErrors[propsData.id]\n        const meta = {\n            ...this.props.propsData,\n            className: this.state.error ? 'error' : '',\n            error: this.state.error || errorMessage,\n            errorMessage,\n            handlers: {\n                onBlurHandler: this.onBlurHandler,\n                customBlurHandler,\n                onChangeHandler: this.onChangeHandler,\n                onFocusHandler: this.onFocusHandler\n            },\n            fieldValues: {\n                propsValue: this.props.value,\n                stateValue: this.state.value\n            }\n        }\n\n        /**\n         * switch function - returns HTML Tag depending upon the requirement\n         * @param  {string} elementType - element type e.g. input,select\n         */\n        switch (elementType) {\n            case 'input':\n                return <InputField meta={meta} />\n            case 'select':\n                return <SelectOption meta={meta} />\n            default:\n                return <input />\n        }\n    }\n}\n\nFormFieldContainer.propTypes = {\n    propsData: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    customBlurHandler: PropTypes.func,\n    customBlurFormatter: PropTypes.func,\n    onFocus: PropTypes.func,\n    value: PropTypes.string,\n    formValues: PropTypes.object,\n    formErrors: PropTypes.object,\n    selectedCreditCard: PropTypes.object,\n    updateFormValues: PropTypes.func,\n    updateFormErrors: PropTypes.func\n}\n\nexport default FormFieldContainer\n","import FormFieldContainer from './FormFieldContainer';\n\nexport default FormFieldContainer;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FormFieldContainer from '../FormFieldContainer';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            greeting: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onFocusHandler = this.onFocusHandler.bind(this)\n    }     \n    \n    handleChange(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        // fetch(`/api/greeting?name=${encodeURIComponent(this.state.name)}`)\n        //     .then(response => response.json())\n        //     .then(state => this.setState(state));\n\n    }\n\n    onFocusHandler() {\n        console.log('Parent, on focus handler')\n    }\n\n    render() {\n        const {\n            context,\n            fieldValues,\n            formErrors,\n            formValues,\n            metaData,\n            updateFormErrors,\n            updateFormValues\n        } = this.props\n        // const jsonData = this.props && this.props.metaData\n        const inputList = metaData && context ? Object.keys(metaData[context]) : []\n\n        let inputListSection =\n            inputList &&\n            inputList.map((item, index) => {\n                const formFieldObject = metaData[context][item]\n                const formField = formFieldObject ? (\n                    <FormFieldContainer\n                        propsData={formFieldObject}\n                        key={index}\n                        onFocus={this.onFocusHandler}\n                        value={fieldValues && fieldValues[item]}\n                        formErrors={formErrors}\n                        formValues={formValues}\n                        updateFormErrors={updateFormErrors}\n                        updateFormValues={updateFormValues}\n                    />\n                ) : null\n                return formField\n            })\n\n        inputListSection = inputListSection.filter((formFieldObject) => {\n            return formFieldObject !== null\n        })\n\n        return (\n            <form className='c-Form' onSubmit={this.handleSubmit}>\n                <fieldset>{inputListSection}</fieldset>\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" style={{marginTop: '15px', background: 'black'}}>Submit</button>\n            </form>\n        )\n    }\n}\n\nForm.propTypes = {\n    context: PropTypes.string,\n    customBlurHandler: PropTypes.func,\n    customBlurFormatter: PropTypes.func,\n    metaData: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    fieldValues: PropTypes.object,\n    formErrors: PropTypes.object,\n    formValues: PropTypes.object,\n    updateFormErrors: PropTypes.func,\n    updateFormValues: PropTypes.func\n}\n\nexport default Form","import Form from './Form';\n\nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport loginFormFields from './../../../config/forms-meta/login-form.json'\nimport Form from './../common/Form'\n\nconst LoginForm = props => {\n  return (\n    <div className='c-LoginForm'>\n      <Form \n        metaData={loginFormFields} \n        context=\"login\"\n        updateFormValues={props.updateFormValues}\n        updateFormErrors={props.updateFormErrors}\n        formErrors={props.formErrors}\n        formValues={props.formValues}\n      />\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  updateFormValues: PropTypes.func,\n  updateFormErrors: PropTypes.func,\n  formValues: PropTypes.object,\n  formErrors: PropTypes.object\n};\n\nexport default LoginForm;","import LoginForm from './LoginForm';\n\nexport default LoginForm;","import React from 'react';\nimport {withRouter} from 'react-router-dom'\nimport {gapi} from 'gapi-script'\n\nclass SocialLogin extends React.Component{\n\n  constructor(props) {\n    super(props)\n    this.width = 254\n    this.height = 50\n    this.onSuccess = this.onSuccess.bind(this)\n    this.onFailure = this.onFailure.bind(this)\n  }\n\n  componentDidMount() {\n    gapi && gapi.signin2 && gapi.signin2.render('g-signin2', {\n      'scope': 'profile email',\n      'width': this.width,\n      'height': this.height,\n      'longtitle': true,\n      'theme': 'dark',\n      'onsuccess': this.onSuccess,\n      'onfailure': this.onFailure\n    });  \n  }\n\n  onSuccess(googleUser) {\n    console.log('Logged in as: ' + googleUser.getBasicProfile().getName());\n    this.props.history.push('/view/plp')\n  }\n\n  onFailure(error) {\n    console.log(error);\n  }\n\n  render() {\n    return (\n      <div className='c-SocialLogin'>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"g-signin2\" id=\"g-signin2\"></div>\n          </div>\n          <div className=\"col-12\">\n            <div \n              className=\"fb-login-button\"\n              data-width={this.width}\n              data-height={this.height}\n              data-size=\"large\"\n              data-button-type=\"continue_with\"\n              data-auto-logout-link=\"false\"\n              data-use-continue-as=\"true\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSocialLogin.defaultProps = {\n\n};\n\nSocialLogin.propTypes = {\n\n};\n\nexport default withRouter(SocialLogin)","import SocialLogin from './SocialLogin.jsx';\n\nexport default SocialLogin;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst Jumbotron = props => {\n  return (\n    <div className='c-Jumbotron'>\n      <h1 className=\"display-4\">{props.jumboText}</h1>\n      <p className=\"lead\">{props.subText}</p>\n      <hr className='my-4' />\n      <p>{props.jumboDescription}</p>\n      <p className=\"lead\">\n        <Link className=\"btn btn-primary btn-lg\" to=\"/view/plp\" role=\"button\">Go To PLP</Link>\n        <Link className=\"btn btn-primary btn-lg float-right\" to=\"#\" role=\"button\" style={{marginLeft: '15px'}}>{props.furtherLink}</Link>\n      </p>\n    </div>\n  );\n};\n\nJumbotron.propTypes = {\n  furtherLink: PropTypes.string,\n  jumboDescription: PropTypes.string,\n  jumboText: PropTypes.string,\n  subText: PropTypes.string\n};\n\nexport default Jumbotron;","import Jumbotron from './Jumbotron.jsx';\n\nexport default Jumbotron;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Login.module.scss'\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport * as actions from './actions'\nimport {getLogin, getFormErrors, getFormValues} from './selectors'\nimport LoginForm from '../../components/molecules/LoginForm'\nimport SocialLogin from '../../components/molecules/SocialLogin'\nimport Jumbotron from '../../components/molecules/common/Jumbotron'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.pageType = 'login'\n    }\n\n    componentDidMount() {\n        const {initializeLogin} = this.props\n        initializeLogin()\n    }\n\n    clicked() {\n        console.log('login handler')\n    }\n\n    render() {\n      const {updateFormErrors, updateFormValues, formErrors, formValues} = this.props\n      return (\n          <div className={`${styles.Login} container`} onClick={this.clicked}>\n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-8\">\n                        <Jumbotron\n                            jumboText=\"Adobe - Joules to Watts assignment\"\n                            subText=\"PLP and Cart Page Demo\"\n                            jumboDescription=\"This app is build using React JS and routing is added using custom solutions to work on GH Pages. Login is optional and can be skipped.\"\n                            furtherLink=\"Learn more\"\n                        />\n                    </div>\n                    <div className=\"col-12 col-lg-4\">\n                        <div className={styles.loginContainer}>\n                        <p className={styles['c-login-intimation']}>Let's get to know each other, shall we!</p>\n                            <LoginForm\n                                updateFormValues={updateFormValues}\n                                updateFormErrors={updateFormErrors}\n                                formErrors={formErrors}\n                                formValues={formValues}\n                            />\n                            <p className={styles.loginSplitter}>OR</p>\n                            <SocialLogin />\n                        </div>\n                    </div>\n                </div>\n          </div>\n      )\n    }\n}\n\nLogin.propTypes = {\n    initializeLogin: PropTypes.func,\n    dataState: PropTypes.object,\n    updateFormValues: PropTypes.func,\n    updateFormErrors: PropTypes.func,\n    formValues: PropTypes.object,\n    formErrors: PropTypes.object\n}\n\nconst mapStateToProps = createPropsSelector({\n    dataState: getLogin,\n    formErrors: getFormErrors,\n    formValues: getFormValues\n})\n\nconst mapDispatchToProps = {\n    initializeLogin: actions.initializeLogin,\n    updateFormErrors: actions.updateFormErrors,\n    updateFormValues: actions.updateFormValues\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login)\n","import Login from './Login.jsx';\n\nexport default Login;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__PPKkV\",\"loginContainer\":\"Login_loginContainer__24QXD\",\"c-login-intimation\":\"Login_c-login-intimation__1OU36\",\"loginSplitter\":\"Login_loginSplitter__1IrNe\"};"],"sourceRoot":""}